#!/bin/bash

# kurbeScript: Script to start a Kubernetes cluster with Minikube, verify it, and list pods

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Check for Docker
if ! command_exists docker; then
    echo "Error: Docker is not installed."
    echo "Please install Docker using the following commands:"
    echo "sudo apt-get update"
    echo "sudo apt-get install -y docker.io"
    echo "sudo systemctl start docker"
    echo "sudo systemctl enable docker"
    exit 1
fi

# Check for kubectl
if ! command_exists kubectl; then
    echo "Error: kubectl is not installed."
    echo "Please install kubectl using the following commands:"
    echo "curl -LO https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    echo "chmod +x kubectl"
    echo "sudo mv kubectl /usr/local/bin/"
    exit 1
fi

# Check for Minikube
if ! command_exists minikube; then
    echo "Error: Minikube is not installed."
    echo "Please install Minikube using the following commands:"
    echo "curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64"
    echo "sudo install minikube-linux-amd64 /usr/local/bin/minikube"
    exit 1
fi

# Start Minikube cluster
echo "Starting Minikube cluster..."
minikube start --driver=docker --cpus=2 --memory=4000
if [ $? -ne 0 ]; then
    echo "Error: Failed to start Minikube cluster."
    exit 1
fi
echo "Minikube cluster started successfully."

# Verify cluster status
echo "Verifying cluster status with kubectl cluster-info..."
kubectl cluster-info
if [ $? -ne 0 ]; then
    echo "Error: Failed to verify cluster status."
    exit 1
fi
echo "Cluster is running."

# Retrieve available pods
echo "Retrieving available pods..."
kubectl get pods --all-namespaces
if [ $? -ne 0 ]; then
    echo "Error: Failed to retrieve pods."
    exit 1
fi
echo "Pods retrieved successfully."

echo "Script completed. Your local Kubernetes cluster is up and running."